Data Extraction
===============

The extraction function takes an XML document and a list of extraction rules.
After converting the content into an XML tree, it applies the rules to the root
of the tree. The result will be a mapping where each item is generated by
one of the rules.

Each rule is itself a mapping. The ``key`` specifies the key for the entry
in the output mapping and the ``value`` specifies how to extract the data
to set as the value for the entry. Typically, a value specifier consists
of an XPath query (``path``) and a ``reducer`` function. The query gets applied
to the root of the tree and a produces a list of strings. Then the reducer
function transforms this list into a single string. For example, the ``first``
reducer selects the first string of the list.

>>> from woody import extract
>>> content = '<table><tr><td>Age:</td><td>42</td></tr></table>'
>>> items = [
...     {'key': 'age', 'value': {'path': './tr/td[2]/text()', 'reducer': 'first'}}
... ]
>>> extract(content, items)
{'age': '42'}

Other common reducer functions are ``join`` and ``clean``. The join reducer
joins all selected strings into one string.

>>> content = '''
... <table>
...   <tr>
...     <td>Name:</td>
...     <td><span class="firstname">John</span> <span class="lastname">Smith</span></td>
...   </tr>
... </table>
... '''
>>> items = [
...     {'key': 'name', 'value': {'path': './tr/td[2]//text()', 'reducer': 'join'}}
... ]
>>> extract(content, items)
{'name': 'John Smith'}

The clean reducer also joins the strings but it strips the result and reduces
multiple whitespace into a single space.

>>> content = '''
... <table>
...   <tr>
...     <td>Name:</td>
...     <td>
...       <span class="firstname">John</span>
...       <span class="lastname">Smith</span>
...     </td>
...   </tr>
... </table>
... '''
>>> extract(content, items)
{'name': '\n      John\n      Smith\n    '}
>>> items = [
...     {'key': 'name', 'value': {'path': './tr/td[2]//text()', 'reducer': 'clean'}}
... ]
>>> extract(content, items)
{'name': 'John Smith'}
